name: Ubuntu CI

on:
  push:
    branches: [ master, feature/deploy-package ]
    tags: ['v*']
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl libomp-dev
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    
    - name: Cache venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry
          .venv
        key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Poetry update 
      run: poetry self update

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root
    
    - name: Build and install package
      run: |
        poetry run python ./setup.py bdist_wheel
        rm -r ./probreg
        poetry run pip install ./dist/*.whl

    - name: Test
      run: poetry run python -m unittest discover

    - name: Upload to remote repo
      env:
        TWINE_REPOSITORY_URL : ${{ secrets.PYPI_CUSTOM_URL }}
        TWINE_USERNAME : ${{ secrets.PYPI_USER }}
        TWINE_PASSWORD : ${{ secrets.PYPI_PASS }}
      run: |
        poetry run twine upload --non-interactive --verbose ./dist/*
